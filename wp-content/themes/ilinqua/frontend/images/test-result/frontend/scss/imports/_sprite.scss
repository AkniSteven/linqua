// /*
// SCSS variables are information about icon's compiled state, stored under its original file name

// .icon-home {
//   width: $icon-home-width;
// }

// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;

// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
// */
// $icon-name: 'icon';
// $icon-x: 0px;
// $icon-y: 0px;
// $icon-offset-x: 0px;
// $icon-offset-y: 0px;
// $icon-width: 512px;
// $icon-height: 512px;
// $icon-total-width: 512px;
// $icon-total-height: 512px;
// $icon-image: '#{$imgurl}/sprite.png';
// $icon: (0px, 0px, 0px, 0px, 512px, 512px, 512px, 512px, '../images/sprite.png', 'icon', );
// $spritesheet-width: 512px;
// $spritesheet-height: 512px;
// $spritesheet-image: '#{$imgurl}/sprite.png';
// $spritesheet-sprites: ($icon, );
// $spritesheet: (512px, 512px, '#{$imgurl}/sprite.png', $spritesheet-sprites, );

// /*
// The provided mixins are intended to be used with the array-like variables

// .icon-home {
//   @include sprite-width($icon-home);
// }

// .icon-email {
//   @include sprite($icon-email);
// }
// */
// @mixin sprite-width($sprite) {
//   width: nth($sprite, 5);
// }

// @mixin sprite-height($sprite) {
//   height: nth($sprite, 6);
// }

// @mixin sprite-position($sprite) {
//   $sprite-offset-x: nth($sprite, 3);
//   $sprite-offset-y: nth($sprite, 4);
//   background-position: $sprite-offset-x  $sprite-offset-y;
// }

// @mixin sprite-image($sprite) {
//   $sprite-image: nth($sprite, 9);
//   background-image: url(#{$sprite-image});
// }

// @mixin sprite($sprite) {
//   @include sprite-image($sprite);
//   @include sprite-position($sprite);
//   @include sprite-width($sprite);
//   @include sprite-height($sprite);
// }

// /*
// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS

// @include sprites($spritesheet-sprites);
// */
// @mixin sprites($sprites) {
//   @each $sprite in $sprites {
//     $sprite-name: nth($sprite, 10);
//     .#{$sprite-name} {
//       @include sprite($sprite);
//     }
//   }
// }
